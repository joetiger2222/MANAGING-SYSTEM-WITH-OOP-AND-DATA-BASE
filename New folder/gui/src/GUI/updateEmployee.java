/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import static GUI.Login.adminid2inhert;
import static GUI.Loginemp.empid2inhert;
import static GUI.Loginemp.taskcode2show;
import static GUI.requestingTask.code;
import static GUI.requestingTask.df;
import static GUI.requestingTask.idadmin2task;
import static GUI.requestingTask.newEndDate;
import static GUI.requestingTask.newStartDate;
import java.sql.*;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import database.classdb;
import java.awt.HeadlessException;

public class updateEmployee extends javax.swing.JFrame {

    /**
     * Creates new form addEmployee
     */
    public updateEmployee() {
         super("Admin UI [updateEmployee]");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        username = new javax.swing.JTextField();
        pass = new javax.swing.JPasswordField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        taskCode = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        id = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        LastName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        EmpType = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        FirstName = new javax.swing.JTextField();
        message = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        sdup = new com.toedter.calendar.JDateChooser();
        edup = new com.toedter.calendar.JDateChooser();
        logout3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        username.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usernameActionPerformed(evt);
            }
        });

        pass.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel1.setText("New Username");

        jLabel2.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel2.setText("New Password");

        taskCode.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        taskCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taskCodeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel3.setText("New Task Code");

        add.setText("UPDATE  EMPLOYEE");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        id.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel4.setText("ID");

        jLabel5.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel5.setText("New First Name");

        LastName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel6.setText("New Last Name");

        EmpType.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        EmpType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General", "CS", "IS", "IT" }));

        jLabel8.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel8.setText("New Employee Type");

        FirstName.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N

        message.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        message.setForeground(new java.awt.Color(51, 0, 0));
        message.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        exit.setBackground(new java.awt.Color(51, 0, 0));
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        back.setText("BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel9.setText("New End Date");

        jLabel10.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel10.setText("New Start Date");

        sdup.setDateFormatString("yyyy-MM-dd");
        sdup.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        edup.setDateFormatString("yyyy-MM-dd");
        edup.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N

        logout3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/log.png"))); // NOI18N
        logout3.setText("LOGOUT");
        logout3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        logout3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        logout3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(exit))
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(message, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(64, 64, 64))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(131, 131, 131))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(81, 81, 81)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(edup, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(sdup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(pass, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(username, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(taskCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(LastName)
                                        .addComponent(id, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(FirstName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(EmpType, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)))
                .addComponent(logout3))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(24, 24, 24)
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel5)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(41, 41, 41))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(logout3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(taskCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(LastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EmpType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(sdup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(edup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(message)
                .addGap(18, 18, 18)
                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(exit)
                    .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_usernameActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        if("true".equals(chkAvalible())){
           
        }
        else{
            String FName = FirstName.getText();
            String LName = LastName.getText();
            String TaskCode = taskCode.getText();
            String UserName = username.getText();
            String Password = pass.getText();
            Object EmployeeType =EmpType.getSelectedItem();
            String ID = id.getText();

            if(FirstName.getText().trim().isEmpty() && LastName.getText().trim().isEmpty() && taskCode.getText().trim().isEmpty() && username.getText().trim().isEmpty() && pass.getText().trim().isEmpty() && id.getText().trim().isEmpty()){
                message.setText("Field(s) are Empty");
            }
            else if (FirstName.getText().trim().isEmpty() || LastName.getText().trim().isEmpty() || taskCode.getText().trim().isEmpty() || username.getText().trim().isEmpty() || pass.getText().trim().isEmpty() || id.getText().trim().isEmpty()){
                message.setText("Please Fill Empty Field(s)");
            }
            else{
                message.setText("");
                update2db(FName , LName , TaskCode , UserName , Password ,(String) EmployeeType , ID);
                chk();
                if("true".equals(chk())){
                    AcceptedTask();
                    oldAcceptedTask();
                    
                }
                    }
                }
        
    }//GEN-LAST:event_addActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void taskCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taskCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_taskCodeActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_exitActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.toBack();
        dispose();
        new EmployeesOptions().toFront();
        new EmployeesOptions().setState(java.awt.Frame.NORMAL);
    }//GEN-LAST:event_backActionPerformed

    private void logout3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout3ActionPerformed
        // TODO add your handling code here:
        Check c=new Check();
        this.setVisible(false);
        c.setVisible(true);
    }//GEN-LAST:event_logout3ActionPerformed
     
         
    /**
     * @param ID
     * @param FName
     * @param LName
     * @param TaskCode
     * @param UserName
     * @param Admin_ID
     * @param Password
     * @param EmployeeType
     */
       
       private  String chkAvalible(){
        String chk = null;
        Connection con = classdb.getCon();
        PreparedStatement ps = null ;
        ResultSet rs = null ;
        try {
            String log =  "SELECT TaskPhase FROM tasks WHERE Code = ? ;";
            ps = con.prepareStatement(log);
            ps.setString(1, taskCode.getText());
            rs = ps.executeQuery();
            String taskAvalible = rs.getString("TaskPhase");
            if ("Accepted".equals(taskAvalible)) {
                JOptionPane.showMessageDialog(null, "This Task Has Been Already Taken .\nPlease , Choose Another Task ." , "",JOptionPane.ERROR_MESSAGE);
                return chk = "true";
            }
            else{
                return chk = "false";
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e,"",JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                rs.close();
                ps.close();
                con.close();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "data was not been closed " +e,"",JOptionPane.ERROR_MESSAGE);
            }
        }
        return chk;
    
    }
    
      // to insert 
      private static void update2db(String FName , String LName , String TaskCode , String UserName , String Password , String EmployeeType , String ID){
        Connection con = classdb.getCon();
        PreparedStatement ps = null ;
        try {
            String insSql =  "UPDATE employee SET FName = ? , LName = ? , TaskCode = ? , UserName = ? , Password = ? , EmployeeType = ? WHERE ID = ? ";
            ps = con.prepareStatement(insSql);
            ps.setString(1, FName);
            ps.setString(2, LName);
            ps.setString(3, TaskCode);
            ps.setString(4, UserName);
            ps.setString(5, Password);
            ps.setString(6, EmployeeType);
            ps.setString(7, ID);
            ps.execute();
           
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Data has not been updated " +e,"",JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                ps.close();
                con.close();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "data was not been closed " +e,"",JOptionPane.ERROR_MESSAGE);
            }
        }
    
    }
     private String oldTaskCode; 
     private String tesst = null; 
      private  String chk(){
        
        Connection con = classdb.getCon();
        PreparedStatement ps = null ;
        ResultSet rs = null ;
        try {
            String log =  "SELECT * FROM employee WHERE ID = ? ;";
            ps = con.prepareStatement(log);
            ps.setString(1, id.getText());
            rs = ps.executeQuery();
            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "Data has been updated");
                oldTaskCode = rs.getString("TaskCode");
                tesst = "true"; 
            }
            else{
                JOptionPane.showMessageDialog(null, "Not Found ID" , "",JOptionPane.ERROR_MESSAGE);
                tesst = "false";
            
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e,"",JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                rs.close();
                ps.close();
                con.close();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "data was not been closed " +e,"",JOptionPane.ERROR_MESSAGE);
            }
        }
        return tesst;
    
    }
      
      private void oldAcceptedTask(){
        Connection con = classdb.getCon();
        PreparedStatement ps = null ;
       
        try {
            String insSql =  "UPDATE tasks SET TaskPhase = 'Pending' , AssignedEmployee = NULL , CreatorName = NULL , StartDate = NULL , EndDate = NULL where Code = ? ; ";
            
            ps = con.prepareStatement(insSql);
            ps.setString(1, oldTaskCode);
            ps.execute();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "taskCode has not been updated  successfully" +e,"",JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                ps.close();
                con.close();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "taskCode has not been updated successfully" +e,"",JOptionPane.ERROR_MESSAGE);
            }
        }
    }
      
      private void AcceptedTask(){
        Connection con = classdb.getCon();
        PreparedStatement ps = null ;
       
        try {
            String insSql =  "UPDATE tasks SET TaskPhase = 'Accepted' , AssignedEmployee = ? , CreatorName = ? , StartDate = ? , EndDate = ? where Code = ? ; ";
            
            ps = con.prepareStatement(insSql);
            ps.setString(1, id.getText());
            ps.setString(2, adminid2inhert);
            ps.setString(3, df.format(sdup.getDate()));
            ps.setString(4, df.format(edup.getDate()));
            ps.setString(5, taskCode.getText());
            
            ps.execute();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "taskCode has not been updated  successfully" +e,"",JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                ps.close();
                con.close();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "taskCode has not been updated successfully" +e,"",JOptionPane.ERROR_MESSAGE);
            }
        }
       
    
    }
    public static void main(String args[]) {
        // 2Connect
        //classdb.getCon();
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateEmployee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new updateEmployee().setVisible(true);
        });
                //insert2db("+FName.getText()+" , "+LName.getText()+" , "+ID.getText()+" , "+taskCode.getText()+" , "+AdminID.getText()+" , "+EmpType.getSelectedItem()+" , "+username.getText()+" , "+pass.getText()+");
                
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> EmpType;
    private javax.swing.JTextField FirstName;
    private javax.swing.JTextField LastName;
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private com.toedter.calendar.JDateChooser edup;
    private javax.swing.JButton exit;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton logout3;
    private javax.swing.JLabel message;
    private javax.swing.JPasswordField pass;
    private com.toedter.calendar.JDateChooser sdup;
    private javax.swing.JTextField taskCode;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
