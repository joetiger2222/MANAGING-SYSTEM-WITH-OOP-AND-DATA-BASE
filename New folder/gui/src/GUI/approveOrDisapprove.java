/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import javax.swing.*;
import static GUI.requestingTask.*;
import static GUI.Loginemp.*;
import database.classdb;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
    
public class approveOrDisapprove extends javax.swing.JFrame {
    
    
    public approveOrDisapprove() {
        super("Employee UI [approveOrDisapprove]");
        initComponents();
        jLabel1.setText("ADMIN IS ASSIGNING MISSION WITH CODE "+code);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        accecpt = new javax.swing.JButton();
        reject = new javax.swing.JButton();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        accecpt.setText("ACCEPT");
        accecpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accecptActionPerformed(evt);
            }
        });

        reject.setText("REJECT");
        reject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectActionPerformed(evt);
            }
        });

        exit.setBackground(new java.awt.Color(51, 0, 0));
        exit.setForeground(new java.awt.Color(255, 255, 255));
        exit.setText("EXIT");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(accecpt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(reject)
                .addGap(59, 59, 59))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exit))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accecpt)
                    .addComponent(reject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(exit))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void accecptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accecptActionPerformed
        
       Accepted();
       AcceptedTask();
       oldAcceptedTask();
        JOptionPane.showMessageDialog(this,"The Task Code Has Been Added Successfully ");
        Employee ee = new Employee();
        ee.setVisible(true);
        ee.newread4emptask();
        dispose();
    }//GEN-LAST:event_accecptActionPerformed

    private void rejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectActionPerformed
        
       RejectedTask();
        JOptionPane.showMessageDialog(this,"EMPLOYEE REJECTED THE ASSIGNED MISSION!");
        Employee ee = new Employee();
        ee.setVisible(true);
        ee.read4emptask();
        dispose();
        
    }//GEN-LAST:event_rejectActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_exitActionPerformed
    
    private void Accepted(){
        Connection con = classdb.getCon();
        PreparedStatement ps = null ;
       
        try {
            String insSql =  "UPDATE employee SET TaskCode = ? where ID = ? ; ";
            
            ps = con.prepareStatement(insSql);
            ps.setInt(1, code);
            ps.setString(2, empid2inhert);
            ps.execute();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "taskCode has not been updated  successfully" +e,"",JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                ps.close();
                con.close();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "taskCode has not been updated successfully" +e,"",JOptionPane.ERROR_MESSAGE);
            }
        }
       
    
    }
    private void oldAcceptedTask(){
        Connection con = classdb.getCon();
        PreparedStatement ps = null ;
       
        try {
            String insSql =  "UPDATE tasks SET TaskPhase = 'Pending' , AssignedEmployee = NULL , CreatorName = NULL , StartDate = NULL , EndDate = NULL where Code = ? ; ";
            
            ps = con.prepareStatement(insSql);
            ps.setString(1, taskcode2show);
            ps.execute();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "taskCode has not been updated  successfully" +e,"",JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                ps.close();
                con.close();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "taskCode has not been updated successfully" +e,"",JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    private void AcceptedTask(){
        Connection con = classdb.getCon();
        PreparedStatement ps = null ;
       
        try {
            String insSql =  "UPDATE tasks SET TaskPhase = 'Accepted' , AssignedEmployee = ? , CreatorName = ? , StartDate = ? , EndDate = ? where Code = ? ; ";
            
            ps = con.prepareStatement(insSql);
            ps.setString(1, empid2inhert);
            ps.setString(2, idadmin2task);
            ps.setString(3, newStartDate);
            ps.setString(4, newEndDate);
            ps.setInt(5, code);
            
            ps.execute();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "taskCode has not been updated  successfully" +e,"",JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                ps.close();
                con.close();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "taskCode has not been updated successfully" +e,"",JOptionPane.ERROR_MESSAGE);
            }
        }
       
    
    }
    
    private void RejectedTask(){
        Connection con = classdb.getCon();
        PreparedStatement ps = null ;
       
        try {
            String insSql =  "UPDATE tasks SET TaskPhase = 'Rejected' , AssignedEmployee = ? , CreatorName = ? , StartDate = NULL , EndDate = NULL where Code = ? ; ";
            
            ps = con.prepareStatement(insSql);
            ps.setString(1, empid2inhert);
            ps.setString(2, idadmin2task);
            ps.setInt(3, code);
            ps.execute();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "taskCode has not been updated  successfully" +e,"",JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                ps.close();
                con.close();
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "taskCode has not been updated successfully" +e,"",JOptionPane.ERROR_MESSAGE);
            }
        }
       
    
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(approveOrDisapprove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new approveOrDisapprove().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accecpt;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton reject;
    // End of variables declaration//GEN-END:variables
}
